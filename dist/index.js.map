{"version":3,"file":"index.js","sources":["../src/style/styles/colors.ts","../src/style/styles/fonts.ts","../src/style/styles/flex.ts","../src/BaseInputTypes/stylesheet.ts","../src/BaseInputTypes/Boolean/BooleanInput.tsx","../src/BaseInputTypes/Date/DateInput.tsx","../src/BaseInputTypes/Email/EmailInput.tsx","../src/BaseInputTypes/Number/NumberInput.tsx","../src/BaseInputTypes/Password/PasswordInput.tsx","../src/BaseInputTypes/String/StringInput.tsx","../src/BaseInputTypes/Select/SelectInput.tsx","../src/BaseInputTypes/FormInstance.tsx","../src/BaseDisplayTypes/stylesheet.ts","../src/BaseDisplayTypes/Array/ArrayInstance.tsx","../src/BaseDisplayTypes/Boolean/BooleanInstance.tsx","../src/BaseDisplayTypes/Date/DateInstance.tsx","../src/BaseDisplayTypes/Number/NumberInstance.tsx","../src/BaseDisplayTypes/Object/ObjectInstance.tsx","../src/BaseDisplayTypes/String/StringInstance.tsx","../src/BaseDisplayTypes/Delegate.tsx","../src/Button/stylesheet.ts","../src/Button/Button.tsx","../src/Spacer/stylesheet.tsx","../src/Spacer/Spacer.tsx"],"sourcesContent":["export const lightGrey = \"#494949\";\nexport const grey = \"#373A3C\";\nexport const darkGrey = \"#262829\";\nexport const accentBlue = \"#3C5763\";\nexport const white = \"#FFFFFF\";\nexport const unselectedGrey = \"#A8A8A8\";\n","export const main = \"sans-serif\";\n","import { CSSProperties } from \"react\";\n\nexport const flex: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"column\",\n};\n\nexport const centerFlex: CSSProperties = {\n  ...flex,\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport const inlineFlex: CSSProperties = {\n  display: \"inline-flex\",\n  flexDirection: \"row\",\n};\n\nexport const centerInlineFlex: CSSProperties = {\n  ...inlineFlex,\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport const spacedInlineFlex: CSSProperties = {\n  display: \"inline-flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"space-around\",\n};\n","import React from \"react\";\nimport { colors, fonts, flex } from \"style\";\n\nconst text = (textColor: string | undefined): React.CSSProperties => ({\n  color: textColor ? textColor : colors.white,\n  fontFamily: fonts.main,\n  fontWeight: 600,\n});\n\nconst formContainer: React.CSSProperties = {\n  width: \"20rem\",\n  ...flex.centerFlex,\n};\n\nconst option = (backgroundColor: string | undefined): React.CSSProperties => ({\n  backgroundColor: backgroundColor ? backgroundColor : colors.lightGrey,\n  ...text,\n});\n\nconst inputContainer = (size: number): React.CSSProperties => {\n  return {\n    marginTop: `${size}rem`,\n    marginBottom: `${size}rem`,\n    ...flex.centerFlex,\n  };\n};\n\nconst inputBox = (\n  size: number,\n  backgroundColor: string | undefined\n): React.CSSProperties => {\n  return {\n    backgroundColor: backgroundColor ? backgroundColor : colors.lightGrey,\n    paddingTop: `${size * 0.75}rem`,\n    paddingBottom: `${size * 0.75}rem`,\n    borderRadius: `${size * 0.5}rem`,\n    fontSize: `${size}rem`,\n    paddingRight: `${size * 1.5}rem`,\n    paddingLeft: `${size * 1.5}rem`,\n    ...text,\n    ...flex.centerInlineFlex,\n    justifyContent: \"flex-start\",\n  };\n};\n\nconst icon = (size: number, color: string): React.CSSProperties => {\n  return {\n    height: `${size / 2}rem`,\n    width: `${size / 2}rem`,\n    borderRadius: `${size / 4}rem`,\n    border: `${size / 4}rem solid ${color}`,\n  };\n};\n\nconst visibilityIcon = (\n  size: number,\n  color: string | undefined\n): React.CSSProperties => {\n  return {\n    width: `${size}rem`,\n    height: \"auto\",\n    color: color ? color : colors.white,\n  };\n};\n\nconst checkbox = (size: number): React.CSSProperties => {\n  return {\n    height: `${size}rem`,\n    width: `${size}rem`,\n    marginRight: `${size}rem`,\n  };\n};\n\nexport default {\n  flex: flex.flex,\n  inlineFlex: flex.centerInlineFlex,\n  text,\n  formContainer,\n  option,\n  inputBox,\n  icon,\n  inputContainer,\n  checkbox,\n  visibilityIcon,\n};\n","import { FC, ReactElement } from \"react\";\nimport stylesheet from \"../stylesheet\";\n\nexport interface BooleanInputProps {\n  name: string;\n  placeholder?: string;\n  backgroundColor?: string;\n  textColor?: string;\n  size?: number;\n  style?: React.CSSProperties;\n  value: any;\n  updateValue: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\n/**\n * This component will display an input for an email. It will show an indicator if the email is valid\n * @param name (string)\n * @param placeholder (string)\n * @param size (number, optional)\n * @param style (React.CSSProperties object, optional)\n * @param value (useState value)\n * @param updateValue (useState update function)\n * @constructor\n */\nexport const BooleanInput: FC<BooleanInputProps> = ({\n  name,\n  placeholder = \"boolean\",\n  backgroundColor,\n  textColor,\n  size = 1,\n  style = {},\n  value,\n  updateValue,\n}): ReactElement => {\n  const handleUpdate = (e: any) => {\n    updateValue(e.target.value);\n  };\n\n  return (\n    <div\n      style={{ ...stylesheet.inputBox(size, backgroundColor), ...style }}\n      data-testid=\"BooleanInput\"\n    >\n      <style>{`\n        .input {\n          all: unset;\n        }\n      `}</style>\n      <input\n        type=\"checkbox\"\n        onChange={handleUpdate}\n        style={{ width: \"100%\", ...stylesheet.checkbox(size) }}\n        name={name}\n        id={name}\n        placeholder={placeholder}\n        value={value}\n        autoComplete=\"off\"\n      />\n      <label style={stylesheet.text(textColor)}>{name}</label>\n    </div>\n  );\n};\n","import { FC, ReactElement } from \"react\";\nimport stylesheet from \"../stylesheet\";\n\nexport interface DateInputProps {\n  name: string;\n  placeholder?: string;\n  backgroundColor?: string;\n  textColor?: string;\n  size?: number;\n  style?: React.CSSProperties;\n  value: any;\n  updateValue: React.Dispatch<React.SetStateAction<Date>>;\n}\n\n/**\n * This component will display an input for an email. It will show an indicator if the email is valid\n * @param name (string)\n * @param placeholder (string)\n * @param size (number, optional)\n * @param style (React.CSSProperties object, optional)\n * @param value (useState value)\n * @param updateValue (useState update function)\n * @constructor\n */\nexport const DateInput: FC<DateInputProps> = ({\n  name,\n  placeholder = \"date\",\n  backgroundColor,\n  textColor,\n  size = 1,\n  style = {},\n  value,\n  updateValue,\n}): ReactElement => {\n  const handleUpdate = (e: any) => {\n    updateValue(e.target.value);\n  };\n\n  return (\n    <div\n      style={{ ...stylesheet.inputBox(size, backgroundColor), ...style }}\n      data-testid=\"DateInput\"\n    >\n      <style>{`\n        .input {\n          all: unset;\n        }\n      `}</style>\n      <input\n        type=\"date\"\n        onChange={handleUpdate}\n        style={{ width: \"100%\", ...stylesheet.text(textColor) }}\n        name={name}\n        id={name}\n        placeholder={placeholder}\n        className=\"input\"\n        value={value}\n        autoComplete=\"off\"\n      />\n    </div>\n  );\n};\n","import { useState, ReactElement, FC } from \"react\";\nimport stylesheet from \"../stylesheet\";\n\nexport interface EmailInputProps {\n  name: string;\n  placeholder?: string;\n  backgroundColor?: string;\n  textColor?: string;\n  size?: number;\n  style?: React.CSSProperties;\n  value: any;\n  updateValue: React.Dispatch<React.SetStateAction<string>>;\n}\n\n/**\n * This component will display an input for an email. It will show an indicator if the email is valid\n * @param name (string)\n * @param placeholder (string)\n * @param size (number, optional)\n * @param style (React.CSSProperties object, optional)\n * @param value (useState value)\n * @param updateValue (useState update function)\n * @constructor\n */\nexport const EmailInput: FC<EmailInputProps> = ({\n  name,\n  placeholder = \"email\",\n  backgroundColor,\n  textColor,\n  size = 1,\n  style = {},\n  value,\n  updateValue,\n}): ReactElement => {\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const ValidateEmail = (e: any) => {\n    updateValue(e.target.value);\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    setErrorMessage(re.test(String(value).toLowerCase()));\n  };\n\n  return (\n    <div\n      style={{ ...stylesheet.inputBox(size, backgroundColor), ...style }}\n      data-testid=\"EmailInput\"\n    >\n      <style>{`\n        .input {\n          all: unset;\n        }\n      `}</style>\n      <input\n        type=\"email\"\n        onChange={ValidateEmail}\n        style={{ width: \"100%\", ...stylesheet.text(textColor) }}\n        name={name}\n        id={name}\n        placeholder={placeholder}\n        className=\"input\"\n        value={value}\n        autoComplete=\"off\"\n      />\n      <div style={stylesheet.icon(size, errorMessage ? \"limegreen\" : \"red\")} />\n    </div>\n  );\n};\n","import { FC, ReactElement } from \"react\";\nimport stylesheet from \"../stylesheet\";\n\nexport interface NumberInputProps {\n  name: string;\n  placeholder?: string;\n  backgroundColor?: string;\n  textColor?: string;\n  size?: number;\n  style?: React.CSSProperties;\n  value: any;\n  updateValue: React.Dispatch<React.SetStateAction<number>>;\n}\n\n/**\n * This component will display an input for a number.\n * @param name (string)\n * @param placeholder (string)\n * @param size (number, optional)\n * @param style (React.CSSProperties object, optional)\n * @param value (useState value)\n * @param updateValue (useState update function)\n * @constructor\n */\nexport const NumberInput: FC<NumberInputProps> = ({\n  name,\n  placeholder = \"number\",\n  backgroundColor,\n  textColor,\n  size = 1,\n  style = {},\n  value,\n  updateValue,\n}): ReactElement => {\n  const handleUpdate = (e: any) => {\n    updateValue(e.target.value);\n  };\n\n  return (\n    <div\n      style={{ ...stylesheet.inputBox(size, backgroundColor), ...style }}\n      data-testid=\"NumberInput\"\n    >\n      <style>{`\n        .input {\n          all: unset;\n        }\n      `}</style>\n      <input\n        type=\"number\"\n        style={{ width: \"100%\", ...stylesheet.text(textColor) }}\n        name={name}\n        id={name}\n        onChange={handleUpdate}\n        placeholder={placeholder}\n        className=\"input\"\n        value={value}\n        autoComplete=\"off\"\n      />\n    </div>\n  );\n};\n","import { ReactElement, FC, useState } from \"react\";\nimport stylesheet from \"../stylesheet\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { Spacer } from \"index\";\n\nexport interface PasswordInputProps {\n  name: string;\n  placeholder?: string;\n  backgroundColor?: string;\n  textColor?: string;\n  size?: number;\n  style?: React.CSSProperties;\n  color?: boolean;\n  value: any;\n  updateValue: React.Dispatch<React.SetStateAction<string>>;\n}\n\n/**\n * This component will display an input for a password.\n * If the parameter 'color' is not given, there will be no indicator.\n * Otherwise, it will be green for true, and red for false.\n * @param name (string)\n * @param placeholder (string)\n * @param size (number, optional)\n * @param style (React.CSSProperties object, optional)\n * @param color (boolean, optional)\n * @param value (useState value)\n * @param updateValue (useState update function)\n * @constructor\n */\nexport const PasswordInput: FC<PasswordInputProps> = ({\n  color,\n  placeholder = color === undefined ? \"password\" : \"repeat password\",\n  backgroundColor,\n  textColor,\n  size = 1,\n  style = {},\n  value,\n  updateValue,\n}): ReactElement => {\n  let [visible, setVisibility] = useState<boolean>(false);\n\n  const handleUpdate = (e: any) => {\n    updateValue(e.target.value);\n  };\n\n  const updateVisibility = () => {\n    setVisibility(!visible);\n  };\n\n  return (\n    <div\n      style={{ ...stylesheet.inputBox(size, backgroundColor), ...style }}\n      data-testid=\"PasswordInput\"\n    >\n      <style>{`\n        .input {\n          all: unset;\n        }\n      `}</style>\n      <input\n        type={visible ? \"text\" : \"password\"}\n        style={{ width: \"100%\", ...stylesheet.text(textColor) }}\n        onChange={handleUpdate}\n        placeholder={placeholder}\n        className=\"input\"\n        value={value}\n        autoComplete=\"off\"\n      />\n      <div style={stylesheet.inlineFlex}>\n        {color === undefined ? null : (\n          <div style={stylesheet.icon(size, color ? \"limegreen\" : \"red\")} />\n        )}\n        <Spacer size={size * 2} />\n        <div\n          onClick={updateVisibility}\n          className=\"input\"\n          style={stylesheet.inlineFlex}\n        >\n          {visible ? (\n            <VisibilityOff style={stylesheet.visibilityIcon(size, textColor)} />\n          ) : (\n            <Visibility style={stylesheet.visibilityIcon(size, textColor)} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FC, ReactElement } from \"react\";\nimport stylesheet from \"../stylesheet\";\n\nexport interface StringInputProps {\n  placeholder?: string;\n  backgroundColor?: string;\n  textColor?: string;\n  size?: number;\n  style?: React.CSSProperties;\n  value: any;\n  updateValue: React.Dispatch<React.SetStateAction<string>>;\n}\n\n/**\n * This component will display an input for an email. It will show an indicator if the email is valid\n * @param placeholder (string)\n * @param size (number, optional)\n * @param style (React.CSSProperties object, optional)\n * @param value (useState value)\n * @param updateValue (useState update function)\n * @constructor\n */\nexport const StringInput: FC<StringInputProps> = ({\n  placeholder = \"string\",\n  backgroundColor,\n  textColor,\n  size = 1,\n  style = {},\n  value,\n  updateValue,\n}): ReactElement => {\n  const handleUpdate = (e: any) => {\n    updateValue(e.target.value);\n  };\n\n  return (\n    <div\n      style={{ ...stylesheet.inputBox(size, backgroundColor), ...style }}\n      data-testid=\"StringInput\"\n    >\n      <style>{`\n        .input {\n          all: unset;\n        }\n      `}</style>\n      <input\n        type=\"text\"\n        onChange={handleUpdate}\n        style={{ width: \"100%\", ...stylesheet.text(textColor) }}\n        placeholder={placeholder}\n        className=\"input\"\n        value={value}\n        autoComplete=\"off\"\n      />\n    </div>\n  );\n};\n","import { FC, ReactElement } from \"react\";\nimport stylesheet from \"../stylesheet\";\n\nexport interface SelectInputProps {\n  name: string;\n  choices?: Array<string>;\n  placeholder?: string;\n  backgroundColor?: string;\n  textColor?: string;\n  size?: number;\n  style?: React.CSSProperties;\n  value: any;\n  updateValue: React.Dispatch<React.SetStateAction<string>>;\n}\n\n/**\n * This component will display a select input\n * @param name (string)\n * @param choices (array of strings)\n * @param size (number, optional)\n * @param style (React.CSSProperties object, optional)\n * @param value (useState value)\n * @param updateValue (useState update function)\n * @constructor\n */\nexport const SelectInput: FC<SelectInputProps> = ({\n  name,\n  choices,\n  placeholder,\n  backgroundColor,\n  textColor,\n  size = 1,\n  style = {},\n  value,\n  updateValue,\n}): ReactElement => {\n  const handleUpdate = (e: any) => {\n    updateValue(e.target.value);\n    console.log(e.target.value);\n  };\n\n  return (\n    <div\n      style={{ ...stylesheet.inputBox(size, backgroundColor), ...style }}\n      data-testid=\"SelectInput\"\n    >\n      <style>{`\n        .input {\n          all: unset;\n        }\n      `}</style>\n      <select\n        onChange={handleUpdate}\n        style={{ width: \"100%\", ...stylesheet.text(textColor) }}\n        name={name}\n        id={name}\n        className=\"input\"\n        value={value === \"\" ? \"placeholder\" : value}\n      >\n        <option\n          disabled\n          value=\"placeholder\"\n          style={stylesheet.option(backgroundColor)}\n        >\n          {placeholder ? placeholder : \"Choose:\"}\n        </option>\n        {choices\n          ? choices.map((choice, i) => (\n              <option\n                value={choice}\n                style={stylesheet.option(backgroundColor)}\n                key={i}\n              >\n                {choice}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n};\n","import { FC, ReactElement } from \"react\";\nimport { BooleanInput } from \"./Boolean/BooleanInput\";\nimport { DateInput } from \"./Date/DateInput\";\nimport { EmailInput } from \"./Email/EmailInput\";\nimport { NumberInput } from \"./Number/NumberInput\";\nimport { PasswordInput } from \"./Password/PasswordInput\";\nimport { SelectInput } from \"./Select/SelectInput\";\nimport { StringInput } from \"./String/StringInput\";\nimport stylesheet from \"./stylesheet\";\n\nexport interface FormInstanceProps {\n  values: Array<{\n    name: string;\n    choices?: Array<string>;\n    placeholder?: string;\n    type: TYPE;\n    value: any;\n    updateValue: React.Dispatch<React.SetStateAction<any>>;\n  }>;\n  size?: number;\n  style?: React.CSSProperties;\n}\n\nexport enum TYPE {\n  boolean,\n  date,\n  email,\n  number,\n  password,\n  repeatedPassword,\n  select,\n  string,\n}\n\n/**\n * This component will display a form from an input array of wanted input fields\n * @param size (number, optional)\n * @param style (React.CSSProperties object, optional)\n * @param values (object)\n * In values:\n * @param name (string)\n * @param placeholder (string)\n * @param type (TYPE)\n * @param value (useState value)\n * @param updateValue (useState update function)\n * @constructor\n */\nexport const FormInstance: FC<FormInstanceProps> = ({\n  values,\n  size = 1,\n  style = {},\n}): ReactElement => {\n  const DisplayForm = ({ values, size = 1, style = {} }: FormInstanceProps) => {\n    return values.map((value, index) => {\n      switch (value.type) {\n        case TYPE.boolean:\n          return (\n            <div style={stylesheet.inputContainer(size)} key={index}>\n              <BooleanInput size={size} {...value} style={style} />\n            </div>\n          );\n        case TYPE.date:\n          return (\n            <div style={stylesheet.inputContainer(size)} key={index}>\n              <DateInput size={size} {...value} style={style} />\n            </div>\n          );\n        case TYPE.email:\n          return (\n            <div style={stylesheet.inputContainer(size)} key={index}>\n              <EmailInput size={size} {...value} style={style} />\n            </div>\n          );\n        case TYPE.number:\n          return (\n            <div style={stylesheet.inputContainer(size)} key={index}>\n              <NumberInput size={size} {...value} style={style} />\n            </div>\n          );\n        case TYPE.password:\n          return (\n            <div style={stylesheet.inputContainer(size)} key={index}>\n              <PasswordInput size={size} {...value} style={style} />\n            </div>\n          );\n        case TYPE.repeatedPassword:\n          if (values[index - 1].type === TYPE.password) {\n            return (\n              <div style={stylesheet.inputContainer(size)} key={index}>\n                <PasswordInput\n                  size={size}\n                  color={\n                    value.value === values[index - 1].value &&\n                    value.value !== \"\"\n                  }\n                  {...value}\n                  style={style}\n                />\n              </div>\n            );\n          } else return null;\n        case TYPE.select:\n          return (\n            <div style={stylesheet.inputContainer(size)} key={index}>\n              <SelectInput size={size} {...value} style={style} />\n            </div>\n          );\n        case TYPE.string:\n          return (\n            <div style={stylesheet.inputContainer(size)} key={index}>\n              <StringInput size={size} {...value} style={style} />\n            </div>\n          );\n        default:\n          return null;\n      }\n    });\n  };\n\n  return (\n    <form\n      style={{ ...stylesheet.formContainer }}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      {DisplayForm({ values, size, style })}\n    </form>\n  );\n};\n","import { CSSProperties } from \"react\";\nimport { fonts } from \"style\";\n\nexport const objectCSS: { [key: string]: CSSProperties } = {\n  padding: {\n    width: \"0.5rem\",\n  },\n};\n\nexport const functionCSS: { [key: string]: (...args: any) => CSSProperties } = {\n  text: (size: number) => ({\n    fontFamily: fonts.main,\n    fontSize: `${size}rem`,\n  }),\n};\n","import { FC, ReactElement } from \"react\";\nimport { Delegate, DelegateProps } from \"../Delegate\";\nimport { functionCSS } from \"../stylesheet\";\n\nexport interface ArrayInstanceProps {\n  value: Array<any>;\n  size?: number;\n  style?: React.CSSProperties;\n}\n\n/**\n * This component will display an array\n * @param value (Array of any type)\n * @param size (the size if the component, will default to 1, optional)\n * @param style (React.CSSProperties, optional)\n * @constructor\n */\nexport const ArrayInstance: FC<ArrayInstanceProps> = ({\n  value,\n  size = 1,\n  style = {},\n}): ReactElement => {\n  return (\n    <ul\n      style={{ ...functionCSS.text(size), ...style }}\n      data-testid=\"ArrayDisplay\"\n    >\n      {value.map((v, index) => {\n        const delegateProps: DelegateProps = {\n          value: v,\n          size,\n          style,\n        };\n        return Array.isArray(v) ? (\n          <div key={index}>\n            <Delegate {...delegateProps} />\n          </div>\n        ) : (\n          <li key={index}>\n            <Delegate {...delegateProps} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { FC, ReactElement } from \"react\";\nimport { functionCSS } from \"../stylesheet\";\n\nexport interface BooleanInstanceProps {\n  value: boolean;\n  size?: number;\n  style?: React.CSSProperties;\n}\n\n/**\n * This component will display a boolean\n * @param value (boolean)\n * @param size (the size if the component, will default to 1, optional)\n * @param style (React.CSSProperties, optional)\n * @constructor\n */\nexport const BooleanInstance: FC<BooleanInstanceProps> = ({\n  value,\n  size = 1,\n  style = {},\n}): ReactElement => {\n  return (\n    <div\n      style={{ ...functionCSS.text(size), ...style }}\n      data-testid=\"BooleanDisplay\"\n    >{`${value}`}</div>\n  );\n};\n","import { FC, ReactElement } from \"react\";\nimport { functionCSS } from \"../stylesheet\";\n\nexport interface DateInstanceProps {\n  value: Date;\n  size?: number;\n  style?: React.CSSProperties;\n}\n\n/**\n * This component will display a date\n * @param value (Date ts object)\n * @param size (the size if the component, will default to 1, optional)\n * @param style (React.CSSProperties, optional)\n * @constructor\n */\nexport const DateInstance: FC<DateInstanceProps> = ({\n  value,\n  size = 1,\n  style = {},\n}): ReactElement => {\n  return (\n    <div\n      style={{ ...functionCSS.text(size), ...style }}\n      data-testid=\"DateDisplay\"\n    >\n      {value.toDateString()}\n    </div>\n  );\n};\n","import { FC, ReactElement } from \"react\";\nimport { functionCSS } from \"../stylesheet\";\n\nexport interface NumberInstanceProps {\n  value: number;\n  size?: number;\n  style?: React.CSSProperties;\n}\n\n/**\n * This component will display a number\n * @param value (number)\n * @param size (the size if the component, will default to 1, optional)\n * @param style (React.CSSProperties, optional)\n * @constructor\n */\nexport const NumberInstance: FC<NumberInstanceProps> = ({\n  value,\n  size = 1,\n  style = {},\n}): ReactElement => {\n  return (\n    <div\n      style={{ ...functionCSS.text(size), ...style }}\n      data-testid=\"NumberDisplay\"\n    >\n      {value}\n    </div>\n  );\n};\n","import { FC, ReactElement } from \"react\";\nimport { Delegate, DelegateProps } from \"../Delegate\";\nimport { functionCSS } from \"../stylesheet\";\n\nexport interface ObjectInstanceProps {\n  value: { [key: string]: any };\n  size?: number;\n  style?: React.CSSProperties;\n}\n\n/**\n * This component will display a json-type object\n * @param value (json-type object)\n * @param size (the size if the component, will default to 1, optional)\n * @param style (React.CSSProperties, optional)\n * @constructor\n */\nexport const ObjectInstance: FC<ObjectInstanceProps> = ({\n  value,\n  size = 1,\n  style = {},\n}): ReactElement => {\n  return (\n    <ul\n      style={{ ...functionCSS.text(size), ...style }}\n      data-testid=\"ObjectDisplay\"\n    >\n      {Object.entries(value).map(([k, v], index) => {\n        const delegateProps: DelegateProps = {\n          value: v,\n          size,\n          style,\n        };\n        return (\n          <li key={index}>\n            {`${k}: `}\n            <Delegate {...delegateProps} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { FC, ReactElement } from \"react\";\nimport { functionCSS } from \"../stylesheet\";\n\nexport interface StringInstanceProps {\n  value: string;\n  size?: number;\n  style?: React.CSSProperties;\n}\n\n/**\n * This component will display a string\n * @param value (string)\n * @param size (the size if the component, will default to 1, optional)\n * @param style (React.CSSProperties, optional)\n * @constructor\n */\nexport const StringInstance: FC<StringInstanceProps> = ({\n  value,\n  size = 1,\n  style = {},\n}): ReactElement => {\n  return (\n    <div\n      style={{ ...functionCSS.text(size), ...style }}\n      data-testid=\"StringDisplay\"\n    >\n      {value}\n    </div>\n  );\n};\n","import { FC, ReactElement } from \"react\";\n\nimport { ArrayInstance } from \"./Array/ArrayInstance\";\nimport { BooleanInstance } from \"./Boolean/BooleanInstance\";\nimport { DateInstance } from \"./Date/DateInstance\";\nimport { NumberInstance } from \"./Number/NumberInstance\";\nimport { ObjectInstance } from \"./Object/ObjectInstance\";\nimport { StringInstance } from \"./String/StringInstance\";\n\nexport interface DelegateProps {\n  value: any;\n  size?: number;\n  style?: React.CSSProperties;\n}\n\n/**\n * This component will display of any of the following types:\n * array, boolean, Date ts object, number, json-type object, string\n * @param value (array, boolean, Date ts object, number, json-type object, string)\n * @param size (the size if the component, will default to 1, optional)\n * @param style (React.CSSProperties, optional)\n * @constructor\n */\nexport const Delegate: FC<DelegateProps> = (props): ReactElement => {\n  const type = typeof props.value;\n  switch (type) {\n    case \"boolean\":\n      return <BooleanInstance {...props} />;\n    case \"number\":\n      return <NumberInstance {...props} />;\n    case \"string\":\n      return <StringInstance {...props} />;\n    case \"object\":\n      if (props.value instanceof Date) return <DateInstance {...props} />;\n      else if (props.value instanceof Array)\n        return <ArrayInstance {...props} />;\n      else if (props.value instanceof Object)\n        return <ObjectInstance {...props} />;\n      else\n        return (\n          <p style={{ color: \"red\" }} data-testid=\"DelegateError\">\n            Invalid type\n          </p>\n        );\n    default:\n      return (\n        <p style={{ color: \"red\" }} data-testid=\"DelegateError\">\n          Invalid type\n        </p>\n      );\n  }\n};\n","import React from \"react\";\nimport { colors, fonts, flex } from \"style\";\n\nexport const button = (\n  size: number,\n  backgroundColor: string | undefined,\n  textColor: string | undefined\n): React.CSSProperties => ({\n  // font stuff\n  fontSize: `${size}rem`,\n  color: textColor ? textColor : colors.white,\n  fontFamily: fonts.main,\n  fontWeight: 650,\n  userSelect: \"none\",\n  // box stuff\n  ...flex.centerInlineFlex,\n  width: \"auto\",\n  height: \"auto\",\n  paddingTop: `${size * 0.75}rem`,\n  paddingBottom: `${size * 0.75}rem`,\n  borderRadius: `${size * 0.5}rem`,\n  paddingRight: `${size * 1.5}rem`,\n  paddingLeft: `${size * 1.5}rem`,\n  backgroundColor: backgroundColor ? backgroundColor : colors.accentBlue,\n  transition: \"0.3s\",\n});\n\nexport const hoverAnimation = `\n.buttonDarken:hover{\n  filter: brightness(0.75);\n}\n.buttonLighten:hover{\n  filter: brightness(1.5);\n}\n`;\n","import { FC, ReactElement, ReactNode } from \"react\";\nimport { button, hoverAnimation } from \"./stylesheet\";\n\nexport interface ButtonProps {\n  onClick: () => void;\n  backgroundColor?: string;\n  textColor?: string;\n  hoverDarken?: boolean;\n  size?: number;\n  children?: ReactNode;\n  style?: React.CSSProperties;\n}\n\n/**\n * Custom Button\n * @param onClick (callback function for clicking the button)\n * @param backgroundColor (string, optional, background color for the button)\n * @param textColor (string, optional, color of the text in the button)\n * @param hoverDarken (boolean, optional, will default to false. If true, will darken on hover, if false, will lighten on hover)\n * @param size (number, size of the component, optional)\n * @param children (child jsx components, optional)\n * @param style (React.CSSProperties, optional)\n * @constructor\n */\nexport const Button: FC<ButtonProps> = ({\n  onClick,\n  backgroundColor,\n  textColor,\n  hoverDarken = false,\n  size = 1,\n  children,\n  style = {},\n}): ReactElement => {\n  return (\n    <div>\n      <style>{hoverAnimation}</style>\n      <div\n        onClick={onClick}\n        className={hoverDarken ? \"buttonDarken\" : \"buttonLighten\"}\n        style={{ ...button(size, backgroundColor, textColor), ...style }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n","import { CSSProperties } from \"react\";\n\nexport const functionCSS: {\n  [key: string]: (...args: any) => CSSProperties;\n} = {\n  box: (size: number) => ({\n    width: `${size * 0.5}rem`,\n  }),\n};\n","import { FC, ReactElement } from \"react\";\nimport { functionCSS } from \"./stylesheet\";\n\ninterface SpacerProps {\n  size?: number;\n}\n\n/**\n * This component is a horizontal spacer (for buttons, for example, to not use margins).\n * Note for storybook: You obviously cannot see the spacer, but it is included here for documentation.\n * @param size (number, the width of the spacer, defaults to 1)\n * @constructor\n */\nexport const Spacer: FC<SpacerProps> = ({ size = 1 }): ReactElement => {\n  return <div style={functionCSS.box(size)} />;\n};\n"],"names":["colors.white","fonts.main","flex.centerFlex","colors.lightGrey","flex.centerInlineFlex","flex.flex","_jsxs","_jsx","useState","VisibilityOff","Visibility","functionCSS","colors.accentBlue"],"mappings":"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"}